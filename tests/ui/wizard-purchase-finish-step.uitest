wizard: PurchaseWizard
GtkDialog(PluggableWizard): hidden, title='New Order'
  GtkVBox(PluggableWizard-vbox): 
    GtkVBox(vbox1, expand=True, fill=True): 
      ProxyLabel(header_lbl, fill=True): hidden
      GtkEventBox(slave_area, expand=True, fill=True): 
        GtkVBox(): 
          GtkTable(expand=True, fill=True): 
            GtkLabel(): 'Salesperson Name:'
            ProxyEntry(): ''
            GtkLabel(): 'Transporter:'
            GtkHBox(): 
              ProxyComboEntry(expand=True, fill=True): 
                  item: 'Jos\xc3\xa9 Carlos de Carvalho'
              GtkButton(fill=True): 
              GtkButton(): 
            GtkLabel(): 'Expected Receival Date:'
            GtkHBox(): 
              ProxyDateEntry(fill=True): date.today()
              ProxyLabel(expand=True, fill=True): 
            GtkLabel(): 'Notes'
            GtkScrolledWindow(): 
              ProxyTextView(): 
            GtkAlignment(): 
              GtkButton(): 'gtk-print'
            GtkCheckButton(): 'Receive all products now.'
      ProxyLabel(notification_lbl, fill=True): 
      GtkHBox(hbox1, fill=True, pack-end): 
        GtkHButtonBox(buttonbox, expand=True, fill=True, pack-end): 
          GtkButton(cancel_button): 'gtk-cancel'
          GtkButton(previous_button): 'gtk-go-back'
          GtkButton(next_button): '_Finish'
          GtkButton(ok_button): 'gtk-ok', hidden
          GtkButton(): 'gtk-help'
    GtkHButtonBox(dialog-action_area1, fill=True, pack-end): 

model: PurchaseOrder
  confirm_date: None
  consigned: False
  discount_value: <currency $ 0>
  expected_freight: <currency $ 0>
  expected_pay_date: datetime.today()
  expected_receival_date: datetime.today()
  freight_type: 0
  notes: u''
  open_date: datetime.today()
  quote_deadline: None
  receival_date: None
  salesperson_name: u''
  status: 2
  surcharge_value: <currency $ 0>

model: PurchaseItem
  base_cost: <currency $125>
  cost: <currency $125>
  expected_receival_date: None
  quantity: Decimal('1.000')
  quantity_received: Decimal('0.000')
  quantity_returned: Decimal('0.000')
  quantity_sold: Decimal('0.000')

model: Payment
  base_value: <currency $125>
  cancel_date: None
  description: u'1/1 Bill for order %% FILTERED BY UNITTEST %%'
  discount: <currency $ 0>
  due_date: datetime.today()
  interest: <currency $ 0>
  open_date: datetime.today()
  paid_date: None
  paid_value: None
  payment_number: None
  payment_type: 1
  penalty: <currency $ 0>
  status: 0
  value: <currency $125>

model: PaymentGroup
  status: 0

