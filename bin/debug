#!/usr/bin/env python
# -*- Mode: Python; coding: iso-8859-1 -*-
# vi:si:et:sw=4:sts=4:ts=4

##
## Copyright (C) 2005 Async Open Source <http://www.async.com.br>
## All rights reserved
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., or visit: http://www.gnu.org/.
##
## Author(s):   Evandro Vale Miquelito      <evandro@async.com.br>
##
""" A debug session for domain objects.  """

import code
import sys

from kiwi.component import provide_utility
from stoqlib.database.admin import USER_ADMIN_DEFAULT_NAME
from stoqlib.database.runtime import get_connection, new_transaction
from stoqlib.database.tables import get_table_types
from stoqlib.domain.person import PersonAdaptToUser
from stoqlib.lib.parameters import sysparam
from stoqlib.lib.interfaces import ICurrentUser

from stoq.lib.configparser import StoqConfig
from stoq.lib.startup import setup, get_option_parser

def _interactive(ns):
    import readline
    import rlcompleter
    readline.parse_and_bind("tab: complete")

    code.interact(local=ns)

def main(args):
    parser = get_option_parser()
    parser.add_option('-c', '--commit',
                      action="store_true",
                      dest="commit")
    parser.add_option('-s', '--script',
                      action="store",
                      type="string",
                      dest="script")

    options, args = parser.parse_args(args)

    config = StoqConfig()
    setup(config, options)

    # Namespace
    ns = locals().copy()
    for table in get_table_types():
        ns[table.__name__] = table

    ns['conn'] = conn = get_connection()
    ns['trans'] = trans = new_transaction()

    for name in ('sqlobject', 'sqlobject.sqlbuilder',
                 'stoqlib.lib.interfaces',
                 'stoqlib.domain.interfaces'):
        mod = __import__(name, {}, {}, ' ')
        ns.update(mod.__dict__)

    if options.debug:
        conn.debug = True

    if options.script:
        execfile(options.script, ns)
    elif len(args) > 1:
        stmt = args[1]
        exec stmt in ns
    else:
        _interactive(ns)

    if options.commit:
        trans.commit()

if __name__ == '__main__':
    sys.exit(main(sys.argv))
